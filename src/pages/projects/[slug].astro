---
import '../../styles/global.css'
import {getCollection, type CollectionEntry} from 'astro:content'
import Layout from '../../layouts/Layout.astro'

type Project = CollectionEntry<'projects'> & {
    render:() => Promise<{ content: any; headings: any[] }>,
} & {slug: string}



export async function getStaticPaths() {
  const projectEntries: Project[] = await getCollection('projects');
  return projectEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

interface Props {
  entry: Project;
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();
---


<Layout>
    <main class="w-full h-screen flex items-center justify-center ">
      
        <div class="shadow-lg  h-full max-w-4xl mx-auto px-4 py-8 overflow-auto no-scrollbar  pt-15 ">
            <h1  >{entry.data.title}</h1>

            <p class="">{entry.data.description}</p>
        
            <nav class="mb-8  p-4 rounded-lg" style="background: linear-gradient(to bottom, var(--primary-color), var(--tertiary-color));">
              <h2 class="text-2xl font-semibold mb-4 quaternary-color " >Contenido</h2>
              <ul class="space-y-2">
                {headings.map((heading: any) => (
                  <li class={`toc-level-${heading.depth} ml-${(heading.depth - 1) * 4}`}>
                    <a href={`#${heading.slug}`} class="quaternary-color   ">
                      {heading.text}
                    </a>
                  </li>
                ))}
              </ul>
            </nav>
        
            <article >
              <Content />
            </article>
          </div>
    </main>

</Layout>    